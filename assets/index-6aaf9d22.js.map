{"version":3,"file":"index-6aaf9d22.js","sources":["../../node_modules/@mui/icons-material/Send.js","../../src/components/Comments/index.tsx"],"sourcesContent":["\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M2.01 21 23 12 2.01 3 2 10l15 2-15 2z\"\n}), 'Send');\nexports.default = _default;","import {\r\n  Box,\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  Grid,\r\n  InputAdornment,\r\n  Paper,\r\n  TextField,\r\n  Typography,\r\n  Button,\r\n} from \"@mui/material\";\r\nimport { useEffect, useState } from \"react\";\r\nimport SendIcon from \"@mui/icons-material/send\";\r\nimport Comment from \"../Comment\";\r\n\r\ninterface CommentsProps {\r\n  /**\r\n   * Comment submission by form actions or button action , button submit adds comment object before form is submitted , form submit adds comment as a server response\r\n   */\r\n  submitByButton: boolean;\r\n  /**\r\n   * Charater limit counter for comment text field\r\n   */\r\n  characterLimit: boolean;\r\n}\r\n\r\nconst commentTemplate = {\r\n  isEditAble: true,\r\n  CommentDisable: false,\r\n  UseChipToDisplayComment: false,\r\n  commentError: \"Error Text\",\r\n  Comment: \"Comment Text\",\r\n  CommentedBy: \"User Name\",\r\n};\r\n\r\nconst Comments = ({\r\n  submitByButton = false,\r\n  characterLimit = true,\r\n}: CommentsProps) => {\r\n  const [newComment, setNewComment] = useState(submitByButton ? 'Click button to add comment' : '');\r\n  const [allComments, setAllComments] = useState([\r\n    {\r\n      isEditAble: false,\r\n      CommentDisable: false,\r\n      UseChipToDisplayComment: true,\r\n      commentError: \"Error Text\",\r\n      Comment: \"Status Message\",\r\n      CommentedBy: \"User Name\",\r\n    },\r\n  ]);\r\n  const handleAddNewComment = () => {\r\n    let commentToAdd = { ...commentTemplate };\r\n    commentToAdd.Comment = newComment;\r\n    setNewComment(\"\");\r\n    setAllComments((previous) => [...previous, commentToAdd]);\r\n  };\r\n  return (\r\n    <Grid xs={12} style={{ paddingBottom: 25 }}>\r\n      <Box mb={2}>\r\n        <Card>\r\n          <CardHeader title={\"Comments\"} />\r\n          <CardContent>\r\n            <Box\r\n              mb={2}\r\n              style={{\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                alignItems: \"center\",\r\n              }}\r\n            >\r\n              <TextField\r\n                disabled={false}\r\n                inputProps={{ maxLength: 250 }}\r\n                onChange={(event) => setNewComment(event.target.value)}\r\n                InputProps={{\r\n                  endAdornment: characterLimit && (\r\n                    <InputAdornment position=\"end\">\r\n                      <Typography\r\n                        style={{\r\n                          position: \"absolute\",\r\n                          bottom: \"5px\",\r\n                          right: 0,\r\n                          minWidth: \"75px\",\r\n                          fontSize: \"12px\",\r\n                        }}\r\n                      >\r\n                        {newComment.length} / 250\r\n                      </Typography>\r\n                    </InputAdornment>\r\n                  ),\r\n                }}\r\n                placeholder=\"Enter your comment here\"\r\n                fullWidth\r\n                multiline\r\n                rows={2}\r\n                variant=\"outlined\"\r\n                value={newComment}\r\n              />\r\n              {submitByButton && newComment.length > 0 && (\r\n                <Button\r\n                  style={{\r\n                    marginTop: \"15px\",\r\n                    minWidth: \"150px\",\r\n                    marginLeft: \"auto\",\r\n                  }}\r\n                  color=\"primary\"\r\n                  endIcon={<SendIcon />}\r\n                  onClick={handleAddNewComment}\r\n                >\r\n                  Add Comment\r\n                </Button>\r\n              )}\r\n            </Box>\r\n            <Box sx={{ display: \"flex\", flexDirection: \"column\", gap: 2 }}>\r\n              {allComments.map((item) => (\r\n                <Comment\r\n                  CommentedBy={item.CommentedBy}\r\n                  UseChipToDisplayComment={item.UseChipToDisplayComment}\r\n                  Comment={item.Comment}\r\n                  isEditAble={item.isEditAble}\r\n                />\r\n              ))}\r\n            </Box>\r\n          </CardContent>\r\n        </Card>\r\n      </Box>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Comments;\r\n"],"names":["_interopRequireDefault","require$$0","Send","default_1","_createSvgIcon","require$$1","_jsxRuntime","require$$2","_default","commentTemplate","Comments","submitByButton","characterLimit","newComment","setNewComment","useState","allComments","setAllComments","handleAddNewComment","commentToAdd","previous","jsx","Grid","Box","jsxs","Card","CardHeader","CardContent","TextField","event","InputAdornment","Typography","Button","SendIcon","item","Comment"],"mappings":"2hBAGIA,EAAyBC,EAC7B,OAAO,eAAeC,EAAS,aAAc,CAC3C,MAAO,EACT,CAAC,EACD,IAAeC,EAAAD,EAAA,QAAG,OACdE,EAAiBJ,EAAuBK,EAAA,CAAgC,EACxEC,EAAcC,EACdC,KAAeJ,EAAe,YAA2BE,EAAY,KAAK,OAAQ,CACpF,EAAG,uCACL,CAAC,EAAG,MAAM,EACVH,EAAAD,EAAA,QAAkBM,ECclB,MAAAC,EAAA,CAAwB,WAAA,GACV,eAAA,GACI,wBAAA,GACS,aAAA,aACX,QAAA,eACL,YAAA,WAEX,EAEAC,EAAA,CAAA,CAAkB,eAAAC,EAAA,GACC,eAAAC,EAAA,EAEnB,IAAA,CACE,KAAA,CAAAC,EAAAC,CAAA,EAAAC,EAAA,SAAAJ,EAAA,8BAAA,EAAA,EACA,CAAAK,EAAAC,CAAA,EAAAF,WAAA,CAA+C,CAC7C,WAAA,GACc,eAAA,GACI,wBAAA,GACS,aAAA,aACX,QAAA,iBACL,YAAA,WACI,CACf,CAAA,EAEFG,EAAA,IAAA,CACE,IAAAC,EAAA,CAAA,GAAAV,GACAU,EAAA,QAAAN,EACAC,EAAA,EAAA,EACAG,EAAAG,GAAA,CAAA,GAAAA,EAAAD,CAAA,CAAA,CAAwD,EAE1D,OAAAE,EAAA,IAAAC,EAAA,CAAA,GAAA,GAAA,MAAA,CAAA,cAAA,EAAA,EAAA,SAAAD,MAAAE,EAAA,CAAA,GAAA,EAAA,SAAAC,EAAA,KAAAC,EAAA,CAAA,SAAA,CAIQJ,EAAAA,IAAAK,EAAA,CAAA,MAAA,UAAA,CAAA,EAA+BF,OAAAG,EAAA,CAAA,SAAA,CAE7BH,EAAA,KAAAD,EAAC,CAAA,GAAA,EACK,MAAA,CACG,QAAA,OACI,cAAA,SACM,WAAA,QACH,EACd,SAAA,CAEAF,EAAA,IAAAO,EAAC,CAAA,SAAA,GACW,WAAA,CAAA,UAAA,GAAA,EACmB,SAAAC,GAAAf,EAAAe,EAAA,OAAA,KAAA,EACwB,WAAA,CACzC,aAAAjB,GAAAS,MAAAS,EAAA,CAAA,SAAA,MAAA,SAAAN,EAAA,KAGNO,EAAC,CAAA,MAAA,CACQ,SAAA,WACK,OAAA,MACF,MAAA,EACD,SAAA,OACG,SAAA,MACA,EACZ,SAAA,CAEClB,EAAA,OAAW,QAAO,CAAA,CAAA,EAAA,CAEvB,EAEJ,YAAA,0BACY,UAAA,GACH,UAAA,GACA,KAAA,EACH,QAAA,WACE,MAAAA,CACD,CAAA,EACTF,GAAAE,EAAA,OAAA,GAAAQ,EAAA,IAEEW,EAAC,CAAA,MAAA,CACQ,UAAA,OACM,SAAA,QACD,WAAA,MACE,EACd,MAAA,UACM,QAAAX,EAAAA,IAAAY,EAAA,EAAA,EACa,QAAAf,EACV,SAAA,aACV,CAAA,CAED,CAAA,CAAA,EAEJG,EAAA,IAAAE,EAAA,CAAA,GAAA,CAAA,QAAA,OAAA,cAAA,SAAA,IAAA,CAAA,EAAA,SAAAP,EAAA,IAAAkB,GAAAb,EAAA,IAGIc,EAAC,CAAA,YAAAD,EAAA,YACmB,wBAAAA,EAAA,wBACY,QAAAA,EAAA,QAChB,WAAAA,EAAA,UACG,CAAA,CAAA,EAAA,CAGvB,EAAA,CACF,EAAA,CAAA,CAAA,CAAA,CAAA,CAKV","x_google_ignoreList":[0]}