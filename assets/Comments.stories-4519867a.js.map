{"version":3,"file":"Comments.stories-4519867a.js","sources":["../../node_modules/@mui/material/CardHeader/cardHeaderClasses.js","../../node_modules/@mui/material/CardHeader/CardHeader.js","../../node_modules/@mui/icons-material/Send.js","../../src/components/Comments/index.tsx"],"sourcesContent":["import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getCardHeaderUtilityClass(slot) {\n  return generateUtilityClass('MuiCardHeader', slot);\n}\nconst cardHeaderClasses = generateUtilityClasses('MuiCardHeader', ['root', 'avatar', 'action', 'content', 'title', 'subheader']);\nexport default cardHeaderClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"action\", \"avatar\", \"className\", \"component\", \"disableTypography\", \"subheader\", \"subheaderTypographyProps\", \"title\", \"titleTypographyProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base/composeClasses';\nimport Typography from '../Typography';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport cardHeaderClasses, { getCardHeaderUtilityClass } from './cardHeaderClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    avatar: ['avatar'],\n    action: ['action'],\n    content: ['content'],\n    title: ['title'],\n    subheader: ['subheader']\n  };\n  return composeClasses(slots, getCardHeaderUtilityClass, classes);\n};\nconst CardHeaderRoot = styled('div', {\n  name: 'MuiCardHeader',\n  slot: 'Root',\n  overridesResolver: (props, styles) => _extends({\n    [`& .${cardHeaderClasses.title}`]: styles.title,\n    [`& .${cardHeaderClasses.subheader}`]: styles.subheader\n  }, styles.root)\n})({\n  display: 'flex',\n  alignItems: 'center',\n  padding: 16\n});\nconst CardHeaderAvatar = styled('div', {\n  name: 'MuiCardHeader',\n  slot: 'Avatar',\n  overridesResolver: (props, styles) => styles.avatar\n})({\n  display: 'flex',\n  flex: '0 0 auto',\n  marginRight: 16\n});\nconst CardHeaderAction = styled('div', {\n  name: 'MuiCardHeader',\n  slot: 'Action',\n  overridesResolver: (props, styles) => styles.action\n})({\n  flex: '0 0 auto',\n  alignSelf: 'flex-start',\n  marginTop: -4,\n  marginRight: -8,\n  marginBottom: -4\n});\nconst CardHeaderContent = styled('div', {\n  name: 'MuiCardHeader',\n  slot: 'Content',\n  overridesResolver: (props, styles) => styles.content\n})({\n  flex: '1 1 auto'\n});\nconst CardHeader = /*#__PURE__*/React.forwardRef(function CardHeader(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCardHeader'\n  });\n  const {\n      action,\n      avatar,\n      className,\n      component = 'div',\n      disableTypography = false,\n      subheader: subheaderProp,\n      subheaderTypographyProps,\n      title: titleProp,\n      titleTypographyProps\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    component,\n    disableTypography\n  });\n  const classes = useUtilityClasses(ownerState);\n  let title = titleProp;\n  if (title != null && title.type !== Typography && !disableTypography) {\n    title = /*#__PURE__*/_jsx(Typography, _extends({\n      variant: avatar ? 'body2' : 'h5',\n      className: classes.title,\n      component: \"span\",\n      display: \"block\"\n    }, titleTypographyProps, {\n      children: title\n    }));\n  }\n  let subheader = subheaderProp;\n  if (subheader != null && subheader.type !== Typography && !disableTypography) {\n    subheader = /*#__PURE__*/_jsx(Typography, _extends({\n      variant: avatar ? 'body2' : 'body1',\n      className: classes.subheader,\n      color: \"text.secondary\",\n      component: \"span\",\n      display: \"block\"\n    }, subheaderTypographyProps, {\n      children: subheader\n    }));\n  }\n  return /*#__PURE__*/_jsxs(CardHeaderRoot, _extends({\n    className: clsx(classes.root, className),\n    as: component,\n    ref: ref,\n    ownerState: ownerState\n  }, other, {\n    children: [avatar && /*#__PURE__*/_jsx(CardHeaderAvatar, {\n      className: classes.avatar,\n      ownerState: ownerState,\n      children: avatar\n    }), /*#__PURE__*/_jsxs(CardHeaderContent, {\n      className: classes.content,\n      ownerState: ownerState,\n      children: [title, subheader]\n    }), action && /*#__PURE__*/_jsx(CardHeaderAction, {\n      className: classes.action,\n      ownerState: ownerState,\n      children: action\n    })]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardHeader.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The action to display in the card header.\n   */\n  action: PropTypes.node,\n  /**\n   * The Avatar element to display.\n   */\n  avatar: PropTypes.node,\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, `subheader` and `title` won't be wrapped by a Typography component.\n   * This can be useful to render an alternative Typography variant by wrapping\n   * the `title` text, and optional `subheader` text\n   * with the Typography component.\n   * @default false\n   */\n  disableTypography: PropTypes.bool,\n  /**\n   * The content of the component.\n   */\n  subheader: PropTypes.node,\n  /**\n   * These props will be forwarded to the subheader\n   * (as long as disableTypography is not `true`).\n   */\n  subheaderTypographyProps: PropTypes.object,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The content of the component.\n   */\n  title: PropTypes.node,\n  /**\n   * These props will be forwarded to the title\n   * (as long as disableTypography is not `true`).\n   */\n  titleTypographyProps: PropTypes.object\n} : void 0;\nexport default CardHeader;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M2.01 21 23 12 2.01 3 2 10l15 2-15 2z\"\n}), 'Send');\nexports.default = _default;","import {\r\n  Box,\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  Grid,\r\n  InputAdornment,\r\n  Paper,\r\n  TextField,\r\n  Typography,\r\n  Button,\r\n} from \"@mui/material\";\r\nimport { useEffect, useState } from \"react\";\r\nimport SendIcon from \"@mui/icons-material/send\";\r\nimport Comment from \"../Comment\";\r\n\r\ninterface CommentsProps {\r\n  /**\r\n   * Comment submission by form actions or button action , button submit adds comment object before form is submitted , form submit adds comment as a server response\r\n   */\r\n  submitByButton: boolean;\r\n  /**\r\n   * Charater limit counter for comment text field\r\n   */\r\n  characterLimit: boolean;\r\n}\r\n\r\nconst commentTemplate = {\r\n  isEditAble: true,\r\n  CommentDisable: false,\r\n  UseChipToDisplayComment: false,\r\n  commentError: \"Error Text\",\r\n  Comment: \"Comment Text\",\r\n  CommentedBy: \"User Name\",\r\n};\r\n\r\nconst Comments = ({\r\n  submitByButton = false,\r\n  characterLimit = true,\r\n}: CommentsProps) => {\r\n  const [newComment, setNewComment] = useState(submitByButton ? 'Click button to add comment' : '');\r\n  const [allComments, setAllComments] = useState([\r\n    {\r\n      isEditAble: false,\r\n      CommentDisable: false,\r\n      UseChipToDisplayComment: true,\r\n      commentError: \"Error Text\",\r\n      Comment: \"Status Message\",\r\n      CommentedBy: \"User Name\",\r\n    },\r\n  ]);\r\n  const handleAddNewComment = () => {\r\n    let commentToAdd = { ...commentTemplate };\r\n    commentToAdd.Comment = newComment;\r\n    setNewComment(\"\");\r\n    setAllComments((previous) => [...previous, commentToAdd]);\r\n  };\r\n  return (\r\n    <Grid xs={12} style={{ minWidth: 500, paddingBottom: 25 }}>\r\n      <Box mb={2}>\r\n        <Card>\r\n          <CardHeader title={\"Comments\"} />\r\n          <CardContent>\r\n            <Box\r\n              mb={2}\r\n              style={{\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                alignItems: \"center\",\r\n              }}\r\n            >\r\n              <TextField\r\n                disabled={false}\r\n                inputProps={{ maxLength: 250 }}\r\n                onChange={(event) => setNewComment(event.target.value)}\r\n                InputProps={{\r\n                  endAdornment: characterLimit && (\r\n                    <InputAdornment position=\"end\">\r\n                      <Typography\r\n                        style={{\r\n                          position: \"absolute\",\r\n                          bottom: \"5px\",\r\n                          right: 0,\r\n                          minWidth: \"75px\",\r\n                          fontSize: \"12px\",\r\n                        }}\r\n                      >\r\n                        {newComment.length} / 250\r\n                      </Typography>\r\n                    </InputAdornment>\r\n                  ),\r\n                }}\r\n                placeholder=\"Enter your comment here\"\r\n                fullWidth\r\n                multiline\r\n                rows={2}\r\n                variant=\"outlined\"\r\n                value={newComment}\r\n              />\r\n              {submitByButton && newComment.length > 0 && (\r\n                <Button\r\n                  style={{\r\n                    marginTop: \"15px\",\r\n                    minWidth: \"150px\",\r\n                    marginLeft: \"auto\",\r\n                  }}\r\n                  color=\"primary\"\r\n                  endIcon={<SendIcon />}\r\n                  onClick={handleAddNewComment}\r\n                >\r\n                  Add Comment\r\n                </Button>\r\n              )}\r\n            </Box>\r\n            <Box sx={{ display: \"flex\", flexDirection: \"column\", gap: 2 }}>\r\n              {allComments.map((item) => (\r\n                <Comment\r\n                  CommentedBy={item.CommentedBy}\r\n                  UseChipToDisplayComment={item.UseChipToDisplayComment}\r\n                  Comment={item.Comment}\r\n                  isEditAble={item.isEditAble}\r\n                />\r\n              ))}\r\n            </Box>\r\n          </CardContent>\r\n        </Card>\r\n      </Box>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Comments;\r\n"],"names":["getCardHeaderUtilityClass","slot","generateUtilityClass","cardHeaderClasses","generateUtilityClasses","cardHeaderClasses$1","_excluded","useUtilityClasses","ownerState","classes","composeClasses","CardHeaderRoot","styled","props","styles","_extends","CardHeaderAvatar","CardHeaderAction","CardHeaderContent","CardHeader","React.forwardRef","inProps","ref","useThemeProps","action","avatar","className","component","disableTypography","subheaderProp","subheaderTypographyProps","titleProp","titleTypographyProps","other","_objectWithoutPropertiesLoose","title","Typography","_jsx","subheader","_jsxs","clsx","CardHeader$1","_interopRequireDefault","require$$0","Send","default_1","_createSvgIcon","require$$1","_jsxRuntime","require$$2","_default","commentTemplate","Comments","submitByButton","characterLimit","newComment","setNewComment","useState","allComments","setAllComments","handleAddNewComment","commentToAdd","previous","jsx","Grid","Box","jsxs","Card","CardContent","TextField","event","InputAdornment","Button","SendIcon","item","Comment"],"mappings":"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","x_google_ignoreList":[0,1,2]}